<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_seb_left</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//init vars
grav = 0.4;
vx = 0;
vy = 0;
jumpspeed = 7;
movespeed = 8; //pixels moved per step
global.jump_enabled = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get player input
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump =  global.jump_enabled &amp;&amp; keyboard_check_pressed(vk_space);

//react to inputs
move = key_left + key_right;
vx = move*movespeed;
if (vy &lt; 10) vy += grav;

if (place_meeting(x,y+1,obj_wall)) {
    vy = key_jump * -jumpspeed;
}

//Horizontal Collision
if (place_meeting(x+vx, y, obj_wall)) {
    while(!place_meeting(x+sign(vx),y,obj_wall)) {
        x += sign(vx);
    }
    vx = 0;
}
x += vx;

//Vertical Collision
if (place_meeting(x, y+vy, obj_wall)) {
    while(!place_meeting(x,y+sign(vy),obj_wall)) {
        y += sign(vy);
    }
    vy = 0;
}
y += vy;

//Animate
if (move != 0) image_xscale = move;
if (place_meeting(x,y+1,obj_wall)) {
    if (move != 0) sprite_index = spr_seb_left; else sprite_index = spr_seb_idle;
} else {
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
